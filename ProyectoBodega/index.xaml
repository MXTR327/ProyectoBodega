<Window x:Class="ProyectoBodega.index"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProyectoBodega"
        mc:Ignorable="d"
        Title="Ventana Principal" Height="768" Width="1366" WindowState="Maximized" Icon="/img/icono.png" KeyDown="Window_KeyDown" MinHeight="718" MinWidth="1356">
    <Grid x:Name="ventanaIndex" Loaded="ventanaIndex_Loaded" RenderTransformOrigin="0.5,0.484">
        <Grid Margin="0,0,165,0">
            <Grid.Background>
                <ImageBrush ImageSource="img/fondo.jpg"/>
            </Grid.Background>
            <Border Background="White" CornerRadius="15,15,15,15" HorizontalAlignment="Center" Width="1170" VerticalAlignment="Center" Height="700">
                <Grid>
                    <Label Content="Total" HorizontalAlignment="Left" FontSize="50" FontFamily="Bahnschrift" VerticalContentAlignment="Center" Margin="771,0,0,-6" Foreground="#FF080808" Height="60" VerticalAlignment="Bottom"/>
                    <Label x:Name="lblTotal" Content="0,00" HorizontalAlignment="Left" Width="257" FontSize="40" FontFamily="Bahnschrift" VerticalContentAlignment="Center" Margin="910,0,0,-14" Foreground="#FF080808" Height="64" VerticalAlignment="Bottom"/>
                    <Label Content="Agregar por ID Especifico" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20" FontFamily="Bahnschrift" VerticalContentAlignment="Center" Margin="358,44,0,0" Foreground="#FF080808"/>
                    <Label Content="Agregar por Nombre Especifico" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20" FontFamily="Bahnschrift" VerticalContentAlignment="Center" Margin="668,44,0,0" Foreground="#FF080808"/>
                    <Label Content="Buscar" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20" FontFamily="Bahnschrift" VerticalContentAlignment="Center" Margin="6,44,0,0" Foreground="#FF080808"/>
                    <TextBox x:Name="txtIdVendedor" HorizontalAlignment="Left" Margin="10,0,0,2" TextWrapping="Wrap" Text="0" Width="78" FontSize="35" FontFamily="Bahnschrift" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" IsReadOnly="True" IsEnabled="False" BorderThickness="0,0,0,2" Height="44" VerticalAlignment="Bottom"/>
                    <TextBox x:Name="txtNombreVendedor" HorizontalAlignment="Left" Margin="92,0,0,8" TextWrapping="Wrap" Text="Anonimo" Width="324" FontSize="20" FontFamily="Bahnschrift" VerticalContentAlignment="Center" IsReadOnly="True" IsEnabled="False" BorderThickness="0,0,0,2" Height="26" VerticalAlignment="Bottom"/>

                    <Grid Cursor="IBeam" ForceCursor="True" Margin="360,80,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <TextBlock x:Name="txtbID" VerticalAlignment="Top" Foreground="Gray" FontSize="20" Text="ID del Producto" Padding="2,0,0,0" Margin="0,-2,0,0"/>
                        <TextBox x:Name="txtBuscarPorCodigo" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" Width="250" FontSize="20" FontFamily="Microsoft Sans Serif" FontWeight="Bold" VerticalContentAlignment="Bottom" MaxLength="5" InputScope="Number" PreviewKeyDown="txtCantidad_PreviewKeyDown" BorderThickness="0,0,0,2" Background="{x:Null}" Padding="2,0,0,0" Margin="0,-1,0,0" GotFocus="txtBuscarPorCodigo_GotFocus" LostFocus="txtBuscarPorCodigo_LostFocus" KeyDown="txtBuscarPorCodigo_KeyDown" />
                    </Grid>

                    <Grid Cursor="IBeam" ForceCursor="True" Margin="675,79,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="260">
                        <Image HorizontalAlignment="Left" Margin="-1,-2,0,5" Width="25" Height="25" Source="img/nombreP.png" Stretch="Fill" Opacity="0.85"/>
                        <TextBlock x:Name="txtbNombre" VerticalAlignment="Top" Margin="0,-1,0,0" Foreground="Gray" FontSize="20" Text="Nombre del Producto" Padding="30,0,0,0"/>
                        <TextBox x:Name="txtBuscarPorNombre" Margin="-2,0,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20" FontFamily="Microsoft Sans Serif" FontWeight="Bold" VerticalContentAlignment="Bottom" TextChanged="txtPrimeraLetraMayuscula_TextChanged" BorderThickness="0,0,0,2" Background="{x:Null}" Padding="30,0,0,0" GotFocus="txtBuscarPorNombre_GotFocus" LostFocus="txtBuscarPorNombre_LostFocus" KeyDown="txtBuscarPorNombre_KeyDown"/>
                    </Grid>



                    <Button x:Name="btnBuscarCodigo" HorizontalAlignment="Left" Height="30" Margin="610,73,0,0" VerticalAlignment="Top" Width="30" FontSize="50" VerticalContentAlignment="Bottom" RenderTransformOrigin="-0.143,0.651" Padding="0,0,0,0" Click="btnBuscarCodigo_Click" BorderThickness="1,1,1,2" BorderBrush="#FFABABAB">
                        <Button.Background>
                            <ImageBrush ImageSource="/img/lupa.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="btnBuscarNombre" HorizontalAlignment="Left" Height="30" Margin="936,73,0,0" VerticalAlignment="Top" Width="30" FontSize="50" VerticalContentAlignment="Bottom" RenderTransformOrigin="0.5,0.5" Padding="0" Click="btnBuscarNombre_Click" BorderThickness="1,1,1,2" BorderBrush="#FFABABAB">
                        <Button.Background>
                            <ImageBrush ImageSource="/img/lupa.png" Stretch="Fill"/>
                        </Button.Background>
                    </Button>

                    <Grid Cursor="IBeam" ForceCursor="True" Margin="10,79,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="315">
                        <Image HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" Source="img/lupa.png" Stretch="Fill" Opacity="0.85" Margin="2,-2,0,0"/>
                        <TextBlock x:Name="txtbBuscar" VerticalAlignment="Top" Foreground="Gray" FontSize="20" Text="Nombre del Producto" Padding="30,0,0,0" Margin="0,-1,0,0"/>
                        <TextBox x:Name="txtBuscadorProducto" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" Width="316" FontSize="20" FontFamily="Microsoft Sans Serif" FontWeight="Bold" VerticalContentAlignment="Bottom" TextChanged="txtBuscadorProducto_TextChanged" BorderThickness="0,0,0,2" Background="{x:Null}" Padding="30,0,0,0" GotFocus="txtBuscadorProducto_GotFocus" LostFocus="txtBuscadorProducto_LostFocus"/>
                    </Grid>


                    <Button x:Name="btnSeleccionar" Content="A&#xD;&#xA;G&#xD;&#xA;R&#xD;&#xA;E&#xD;&#xA;G&#xD;&#xA;A&#xD;&#xA;R" HorizontalAlignment="Center" Height="339" Margin="1105,0,0,150" VerticalAlignment="Center" Width="50" HorizontalContentAlignment="Center" FontSize="20" Click="btnSeleccionar_Click">
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="55" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="339" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="50" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="339" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#007ACC" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Width" Value="476" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="0,10,10,0">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#FF2D3E50" Offset="0"/>
                                <GradientStop Color="#FF3498DB" Offset="0.5"/>
                                <GradientStop Color="#FF2071B4" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                    <Button x:Name="brnBorrarFila" Content="Borrar" HorizontalAlignment="Center" Height="42" Margin="1005,310,0,0" VerticalAlignment="Center" Width="153" HorizontalContentAlignment="Center" FontSize="20" Click="brnBorrarFila_Click">
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="158" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="44" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="153" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="42" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#007ACC" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Width" Value="476" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="0,10,10,0">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#FFD76D00" Offset="0"/>
                                <GradientStop Color="#FFC25A00" Offset="0.5"/>
                                <GradientStop Color="#FFA64100" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                    <Button x:Name="btnCobrarVenta" Content="Cobrar" HorizontalAlignment="Center" Height="90" Margin="1005,445,0,0" VerticalAlignment="Center" Width="153" HorizontalContentAlignment="Center" FontSize="20" Click="btnCobrarVenta_Click">
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="158" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="91" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="153" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="90" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#007ACC" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Width" Value="476" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="0,10,10,0">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#FF006837" Offset="0"/>
                                <GradientStop Color="#FF005C31" Offset="0.5"/>
                                <GradientStop Color="#FF004024" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>

                    <Button x:Name="btnCancelarVenta" Content="Cancelar Venta" HorizontalAlignment="Center" Height="32" Margin="1005,570,0,0" VerticalAlignment="Center" Width="153" HorizontalContentAlignment="Center" FontSize="20" Click="btnCancelarVenta_Click">
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="158" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="33" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="153" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#007ACC" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Width" Value="476" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="0,10,10,0">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#FFAC0000" Offset="0"/>
                                <GradientStop Color="#FF8C0000" Offset="0.5"/>
                                <GradientStop Color="#FF660000" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>


                    <Label Content="Top Productos" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift" FontSize="30" VerticalContentAlignment="Center" Margin="4,4,0,0" Foreground="#FF080808"/>
                    <Label Content="Nueva Venta" HorizontalAlignment="Left" Margin="4,444,0,0" VerticalAlignment="Top" FontFamily="Bahnschrift" FontSize="30" VerticalContentAlignment="Center" Foreground="#FF080808"/>
                    <DataGrid x:Name="dgProducto" HorizontalAlignment="Left" Height="339" Margin="10,105,0,0" VerticalAlignment="Top" Width="1103" AutoGenerateColumns="False" SelectionMode="Single" CanUserAddRows="False" IsReadOnly="True" MouseDoubleClick="dgProducto_MouseDoubleClick" HeadersVisibility="Column">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="FontSize" Value="15"/>
                                <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
                                <Setter Property="BorderBrush" Value="gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Padding" Value="0,1,0,0"/>
                                <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
                                <Setter Property="Background" Value="#333333"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="17"/>
                                <Setter Property="BorderBrush" Value="#555555"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="TopColumn" Header="Top" Width="50" Binding="{Binding Top}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="idProducto" Header="ID" Width="40" Binding="{Binding idProducto}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="nombre_producto" Header="Nombre" Width="*" Binding="{Binding nombre_producto}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Padding" Value="3,0,0,0"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="precio_compra" Header="Prec. Compra" Width="120" Binding="{Binding precio_compra}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="precio_venta" Header="Prec. venta" Width="120" Binding="{Binding precio_venta}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="stock" Header="Stock" Width="70" Binding="{Binding stock}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="nombre_categoria" Header="Categoria" Width="155" Binding="{Binding nombre_categoria}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="VecesVendido" Header="Veces Vendidas" Width="150" Binding="{Binding VecesVendido}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid x:Name="dgVenta" HorizontalAlignment="Left" Height="168" Margin="10,483,0,0" VerticalAlignment="Top" Width="1001" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" HeadersVisibility="Column">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="FontSize" Value="15"/>
                                <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
                                <Setter Property="BorderBrush" Value="gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Padding" Value="0,1,0,0"/>
                                <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
                                <Setter Property="Background" Value="#333333"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="17"/>
                                <Setter Property="BorderBrush" Value="#555555"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="Cuenta" Header="" Width="50" Binding="{Binding Cuenta}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="codigo" Header="ID" Width="50" Binding="{Binding idProducto}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="nombreproductoVenta" Header="Nombre Producto" Width="*" Binding="{Binding nombre_producto}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Padding" Value="3,0,0,0"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="Precio" Header="Precio" Width="120" Binding="{Binding precio_compra}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="Cantidad" Header="Cantidad" Width="150" Binding="{Binding Cantidad}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="total" Header="Total a Pagar" Width="150" Binding="{Binding Total}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
            <!--|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||-->
        </Grid>
        <GridSplitter Margin="0,0,162,0" Background="#FFB1B1B1" Width="2"/>
        <Button x:Name="btnAgregarStock" Content="Agregar Stock" HorizontalAlignment="Center" Height="91" Margin="1200,100,0,0" VerticalAlignment="Center" Width="149" HorizontalContentAlignment="Center" FontSize="20" FontFamily="Calibri" Click="btnAgregarStock_Click">
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="154" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="92" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="149" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="91" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#007ACC" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Width" Value="476" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FF4CAF50" Offset="0"/>
                    <GradientStop Color="#FF388E3C" Offset="0.5"/>
                    <GradientStop Color="#FF2E7D32" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="btnInventario" Content="Inventario( F2 )" HorizontalAlignment="Center" Height="126" Margin="1200,0,0,120" VerticalAlignment="Center" Width="149" HorizontalContentAlignment="Center" FontSize="20" Click="btnInventario_Click" FontFamily="Calibri">
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="154" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="127" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="149" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="126" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#007ACC" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Width" Value="476" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FF4CAF50" Offset="0"/>
                    <GradientStop Color="#FF388E3C" Offset="0.5"/>
                    <GradientStop Color="#FF2E7D32" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="btnVendedores" Content="Vendedores( F3 )" HorizontalAlignment="Center" Height="172" Margin="1200,375,0,0" VerticalAlignment="Center" Width="147" HorizontalContentAlignment="Center" FontSize="20" Click="btnVendedores_Click" FontFamily="Calibri">
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="152" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="175" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="147" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="172" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#007ACC" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Width" Value="476" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FFFD9E27" Offset="0"/>
                    <GradientStop Color="#FFD9821A" Offset="0.5"/>
                    <GradientStop Color="#FFC26D14" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="btnSalir" Content="Salir" Margin="1200,615,0,0" Width="147" HorizontalContentAlignment="Center" FontSize="20" Click="btnSalir_Click" FontFamily="Calibri" HorizontalAlignment="Center" Height="57" VerticalAlignment="Center">
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="152" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="60" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="147" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="57" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#007ACC" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Width" Value="476" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FFD32F2F" Offset="0"/>
                    <GradientStop Color="#FF953232" Offset="0.5"/>
                    <GradientStop Color="#FF701616" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="btnVentas" Content="Ventas( F1 )" HorizontalAlignment="Center" Height="143" Margin="1200,0,0,399" VerticalAlignment="Center" Width="147" HorizontalContentAlignment="Center" FontSize="20" Click="btnVentas_Click" FontFamily="Calibri" Padding="1,1,1,1" VerticalContentAlignment="Center">
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="152" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="146" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="147" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="143" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#007ACC" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Width" Value="476" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="10" Padding="0,0,0,20">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FF007ACC" Offset="0"/>
                    <GradientStop Color="#FF005B97" Offset="0.5"/>
                    <GradientStop Color="#FF003E63" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="btnCerrarSesion" Content="Cerrar sesion" Height="70" Margin="1200,0,0,630" VerticalAlignment="Center" Width="154" HorizontalContentAlignment="Center" FontSize="20" Click="btnCerrarSesion_Click" FontFamily="Calibri" HorizontalAlignment="Center">
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="159" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="73" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="154" Duration="0:0:0.1" Storyboard.TargetProperty="Width" />
                            <DoubleAnimation To="70" Duration="0:0:0.1" Storyboard.TargetProperty="Height" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Width" Value="476" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FF8758B6" Offset="0"/>
                    <GradientStop Color="#FF61409C" Offset="0.5"/>
                    <GradientStop Color="#FF402D6F" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
    </Grid>
</Window>
